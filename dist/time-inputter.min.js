/**
 * Time Inputter
 * @description add `hh:mm`format to input element.
 * @version __RELEASE_VERSION__
 * @author kanats007
 * @license "MIT"
 */
function T() {
  const r = ":", R = /[0-9]{2}:[0-5][0-9]/, v = /[0-9]{1,2}:[0-9]{1,2}/, A = /[0-9]{2}/, M = "input.time-inputter";
  let o = "", c = "", E = !1, d = !1;
  document.querySelectorAll(M).forEach((e) => {
    const t = e;
    x(t.defaultValue) || (t.defaultValue = `00${r}00`), b(t.type) || (t.type = "text");
    const n = t.getAttribute("maxHour");
    n !== null && t.setAttribute("maxHour", a(n)), t.addEventListener("input", L), t.addEventListener("focus", k), t.addEventListener("click", p), t.addEventListener("dblclick", p), t.addEventListener("keydown", C);
  });
  function x(e) {
    return R.test(a(e));
  }
  function I(e) {
    return e === null ? !1 : A.test(a(e));
  }
  function b(e) {
    return e === "text";
  }
  function C(e) {
    if (e.code !== "ArrowRight" && e.code !== "ArrowLeft" && e.code !== "ArrowUp" && e.code !== "ArrowDown")
      return;
    const t = f(e);
    if (t === null)
      return;
    const n = t.selectionStart ?? 0;
    n <= 2 && t.setSelectionRange(3, 5), 3 <= n && t.setSelectionRange(0, 2), s(t), e.preventDefault();
  }
  function p(e) {
    const t = f(e);
    if (t === null)
      return;
    const n = t.selectionStart ?? 0;
    if (n <= 2) {
      t.setSelectionRange(0, 2);
      return;
    }
    if (3 <= n) {
      t.setSelectionRange(3, 5);
      return;
    }
    e.preventDefault(), s(t);
  }
  function L(e) {
    const t = f(e);
    if (t === null)
      return;
    const n = a(t.value);
    if (!_(n)) {
      t.value = (o.length === 1 ? "0" + o : o) + r + (c.length === 1 ? "0" + c : c), t.setSelectionRange(0, 2), s(t);
      return;
    }
    const l = I(t.getAttribute("maxHour")) ? t.getAttribute("maxHour") : "99", { inputHours: u, inputMinutes: i } = m(n), h = n.search(r), S = t.selectionStart ?? 0;
    if (S <= h)
      if (!E && u.length === 1)
        t.value = "0" + u + r + i, E = !0, o = u, c = i, t.setSelectionRange(0, 2);
      else {
        const g = u.length === 2 ? u : o + u;
        t.value = (Number(l) < Number(g) ? "00" : g) + r + i, t.setSelectionRange(3, 5), s(t);
      }
    if (h < S)
      if (!d && i.length === 1)
        t.value = u + r + "0" + i, d = !0, o = u, c = i, t.setSelectionRange(3, 5);
      else {
        const g = Number(l) < Number(u) ? "00" : u, H = i.length === 2 ? i : c + i;
        t.value = g + r + (60 <= Number(H) ? "00" : H), t.setSelectionRange(0, 2), s(t);
      }
  }
  function _(e) {
    return !(5 < e.length || !v.test(e));
  }
  function k(e) {
    const t = f(e);
    t !== null && (t.setSelectionRange(0, 2), s(t));
  }
  function m(e) {
    const t = e.search(r), n = e.slice(0, t), l = e.slice(t + 1);
    return {
      inputHours: n === "" ? "00" : n,
      inputMinutes: l === "" ? "00" : l
    };
  }
  function a(e) {
    return e.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function(t) {
      return String.fromCharCode(t.charCodeAt(0) - 65248);
    });
  }
  function s(e) {
    const { inputHours: t, inputMinutes: n } = m(e.value);
    o = t, c = n, E = !1, d = !1;
  }
  function f(e) {
    return e.target instanceof HTMLInputElement ? e.target : null;
  }
}
export {
  T as timeInputter
};
