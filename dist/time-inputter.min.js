/**
 * Time Inputter
 * @description add `hh:mm`format to input element.
 * @version __RELEASE_VERSION__
 * @author kanats007
 * @license "MIT"
 */
function w() {
  const c = ":", m = /[0-9]{2}:[0-5][0-9]/, v = /[0-9]{1,2}:[0-9]{1,2}/, R = /[0-9]{2}/, A = "input.time-inputter";
  let r = "", o = "", l = !1, a = !1;
  document.querySelectorAll(A).forEach((t) => {
    const e = t;
    H(e.defaultValue) || (e.defaultValue = `00${c}00`), C(e.type) || (e.type = "text"), e.addEventListener("input", _), e.addEventListener("focus", x), e.addEventListener("click", E), e.addEventListener("dblclick", E), e.addEventListener("keydown", I);
  });
  function H(t) {
    return m.test(g(t));
  }
  function M(t) {
    return t === null ? !1 : R.test(g(t));
  }
  function C(t) {
    return t === "text";
  }
  function I(t) {
    if (t.code !== "ArrowRight" && t.code !== "ArrowLeft" && t.code !== "ArrowUp" && t.code !== "ArrowDown")
      return;
    const e = t.target;
    if (e === null)
      return;
    const n = e.selectionStart ?? 0;
    n <= 2 && e.setSelectionRange(3, 5), 3 <= n && e.setSelectionRange(0, 2), d(e), t.preventDefault();
  }
  function E(t) {
    const e = t.target;
    if (e === null)
      return;
    const n = e.selectionStart ?? 0;
    if (n <= 2) {
      e.setSelectionRange(0, 2);
      return;
    }
    if (3 <= n) {
      e.setSelectionRange(3, 5);
      return;
    }
    t.preventDefault(), d(e);
  }
  function _(t) {
    const e = t.target;
    if (e === null)
      return;
    const n = g(e.value);
    if (!k(n)) {
      e.value = (r.length === 1 ? "0" + r : r) + c + (o.length === 1 ? "0" + o : o), e.setSelectionRange(0, 2);
      return;
    }
    const f = M(e.getAttribute("maxHour")) ? e.getAttribute("maxHour") : "99", { inputHours: i, inputMinutes: u } = p(n), h = n.search(c), S = e.selectionStart ?? 0;
    if (S <= h)
      if (!l && i.length === 1)
        e.value = "0" + i + c + u, l = !0, r = i, o = u, e.setSelectionRange(0, 2);
      else {
        const s = i.length === 2 ? i : r + i;
        e.value = (Number(f) < Number(s) ? "00" : s) + c + u, l = !1, r = s, o = u, e.setSelectionRange(3, 5);
      }
    if (h < S)
      if (!a && u.length === 1)
        e.value = i + c + "0" + u, a = !0, r = i, o = u, e.setSelectionRange(3, 5);
      else {
        const s = u.length === 2 ? u : o + u;
        e.value = i + c + (60 <= Number(s) ? "00" : s), a = !1, r = i, o = s, e.setSelectionRange(0, 2);
      }
  }
  function k(t) {
    return !(5 < t.length || !v.test(t));
  }
  function x(t) {
    const e = t.target;
    e !== null && (e.setSelectionRange(0, 2), d(e));
  }
  function p(t) {
    const e = t.search(c), n = t.slice(0, e), f = t.slice(e + 1);
    return {
      inputHours: n === "" ? "00" : n,
      inputMinutes: f === "" ? "00" : f
    };
  }
  function g(t) {
    return t = t.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function(e) {
      return String.fromCharCode(e.charCodeAt(0) - 65248);
    }), t;
  }
  function d(t) {
    const { inputHours: e, inputMinutes: n } = p(t.value);
    r = e, o = n, l = !1, a = !1;
  }
}
export {
  w as timeInputter
};
